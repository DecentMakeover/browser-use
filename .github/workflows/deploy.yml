name: Build and Deploy API (Dev)
run-name: ðŸš€ ${{ github.actor }} is deploying Browser Use API to Dev

on: workflow_dispatch

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    environment: development

    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # NOTE: Google Cloud Authentication via credentials json
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "_json_key"
          password: "${{ secrets.GCP_CREDENTIALS }}"
          registry: "asia-south1-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build --push \
          --tag "asia-south1-docker.pkg.dev/deep-431309/decent-makeover/browser-use:${{ github.sha }}" \
          --file Dockerfile .
      # END - Docker auth and build
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          region: asia-south1
          service: browser-use
          image: 'asia-south1-docker.pkg.dev/deep-431309/decent-makeover/browser-use:${{ github.sha }}'
          flags: "--port=8000 --min-instances=0 --max-instances=4 --cpu=2 --memory=4Gi --allow-unauthenticated"
          env_vars: |
            ANONYMIZED_TELEMETRY=true
            BROWSER_USE_LOGGING_LEVEL=info
          secrets: |
            OPENAI_API_KEY=OPENAI_API_KEY:latest
            GOOGLE_API_KEY=GOOGLE_API_KEY:latest

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
